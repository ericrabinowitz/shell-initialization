ls
pwd
ls -al
ls -al
pwd
pwd
ls -lt | more
cd Desktop
ls -lt | more
ls -lt
pwd
cd ..
cd ..
ls
ls flash
cd flash
cd src
ls
ls -al
vi flash_mem_arb.c
pwd
cd ..
ls -al
pwd
cd ..
ls -al
cd flash
ls -al
cd src
ls -al
vi flash.c
ls -al
cp flash_w25.c fram_fm25cl64b.c
vi fram_fm25cl64b.c
pwd
mkdir proxy
cd proxy
git
git
ls
pwd
mkdir fw-nrf
cd fw-nrf
git clone https://github.com/proxyco/fw-nrf.git
git clone https://github.com/proxyco/fw-nrf.git
git clone https://github.com/proxyco/fw-nrf.git
git clone https://github.com/proxyco/fw-nrf.git
git clone https://github.com/proxyco/fw-nrf.git
git clone https://github.com/proxyco/fw-nrf.git
pwd
vi ~/fw-nrf.personal_access_token
cp ~/fw-nrf.personal_access_token fw-nrf.tok
ls -l
git clone https://github.com/proxyco/fw-nrf.git
cd ..
pwd
cd ..
mkdir tmp_proxy
cd tmp_proxy
ls -l ~/Downloads
mv ~/Downloads/fw-nrf-master.zip
mv ~/Downloads/fw-nrf-master.zip .
unzip fw-nrf-master.zip
pwd
ls -al
cd fw-nrf-master
ls -l
pwd
pwd
pwd
cd ..
pwd
cd ..
pwd
mkdir proxy
cd p
cd proxy
https://github.com/apache/mynewt-core.git
git clone https://github.com/apache/mynewt-core.git
ls
brew tap PX4/homebrew-px4
brew
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
brew tap PX4/homebrew-px4
brew tap JuulLabs-OSS/mynewt\
==> Tapping juullabs-oss/mynewt\
Cloning into '/usr/local/Homebrew/Library/Taps/juullabs-oss/homebrew-mynewt'...\
remote: Enumerating objects: 16, done.\
remote: Counting objects: 100% (16/16), done.\
remote: Compressing objects: 100% (13/13), done.\
remote: Total 16 (delta 12), reused 3 (delta 3), pack-reused 0\
Unpacking objects: 100% (16/16), done.\
Tapped 14 formulae (52 files, 51.9KB).
brew update
brew untap runtimeco/mynewt
brew upgrade mynewt-newt
brew tap JuulLabs-OSS/mynewt
brew install mynewt-newt
newt version
pwd
ls
brew tap PX4/homebrew-px4
brew update
brew install gcc-arm-none-eabi-49
arm-none-eabi-gcc --version\
a
arm-none-eabi-gcc --version\

ls -al /usr/local/bin/arm-none-eabi-gdb
brew update
brew install open-ocd --HEAD
which openocd
openocd -v
pwd
ssh-keygen -t rsa
ls ~/.ssh
more ~/.ssh/id_rsa.pub
git clone git@github.com:proxyco/fw-nrf.git
mv fw-nrf fw-nrf.master
git clone git@github.com:proxyco/fw-nrf.git
pwd
ls -l
diff -r fw-nrf fw-nrf.master
pwd
cd fw-nrf
ls
make load TARGET=proxy-nano-soc-v2-debug
cd ..
pwd
cd fw-nrf.master
ls
cd fw-nrf.tok
ls
ls -al
cd fw-nrf.tok
ls -al
cd ..
ls
ls
cd mynewt-core
ls
pwd
cd ..
ls
cd mynewt-core
ls
cd targets
ls
cd unittest
ls
ls -l
pwd
cd ..
cd ..
pwd
cd ..
ls
mv ~/Desktop/proxy_test.tgz .
tar tvf proxy_test.tgz
mkdir interview_test
cd interview_test
mv ../proxy_test.tgz .
pwd
tar xvf proxy_test.tgz
l -l
ls -al
more documentation.txt
clear; newt create-image ble_temp_sensor 1.0.0
ls -al
vi main.c
ls -l
pwd
cd ..
ls
cd fr-nrf
cd fw-nrf
ls
vi Makefile
pwd
cd lib
ls
ls -al
pwd
cd ..
cd ..
cd monocypher-3.0.0
ls
ls -al
cd
c
cd
cd proxy
ls
cd fw-nrf.master
ls
make clean all
pwd
ls
cd fw-nrf
ls
make clean-all
make 
pwd
arm-none-eabi-gcc --version
brew 
brew update
brew install px4/px4/gcc-arm-none-eabi
arm-none-eabi-gcc --version
brew install gcc-arm-none-eabi
brew remove gcc-arm-none-eabi
brew remove px4/px4/gcc-arm-none-eabi
brew install gcc-arm-none-eabi
brew tap PX4/homebrew-px4
brew update
brew install gcc-arm-none-eabi
rm /Users/erabinowitz/Library/Caches/Homebrew/downloads/*
brew install gcc-arm-none-eabi
arm-none-eabi-gcc --version
bew
brew untap
brew list
brew uninstall gcc-arm-none-eabi-49
arm-none-eabi-gcc --version
brew install arm-none-eabi-gcc
history | grep brew | grewp eabi
history | grep brew | grep eabi
brew tap
brew untap px4/px4
brew install wget
brew tap
history | grep brew | grep eabi
history | grep tap
brew tap
brew tap
brew install gcc-arm-none-eabi
brew link gcc-arm-none-eabi
 gcc-arm-none-eabi --version
brew link gcc-arm-none-eabi
brew update
brew link 
brew upgrade
brew update
brew link
brew uninstall gcc-arm-none-eabi
brew install gcc-arm-none-eabi
brew tap
history | brew tap
brew install gcc-arm-none-eabi-73
brew tap PX4/homebrew-px4
brew update
brew search px4
brew install gcc-arm-none-eabi-74
make
pwd
 gcc-arm-none-eabi --version
brew update
pwd
cd targets
git branch
pwd
pwd
grep -r flash_w25_write .
pwd
cd ../../
cd
cd proxy
ls
cd fw-nrf
ls
grep -r flash_w25_write .
cd lib
cd apps
cd ..
cd apps/prod-test/src
ls
vi prod_test_flash.c
pwd
pwd
ls -al
cd proxy
ls
cd fw-nrf
ls
make load TARGET=proxy-nano-soc-v2-debug
cd d..
cd ..
cd fw-nrf
ls
cd ..
cd fw-nrf.master
ls
cd fw-nrf.tok
ls -l
pwd
ls
ls -lR
git clone git@github.com:proxyco/fw-nrf.git
ls
cd fw-nrf
pwd
ls
cd lib
ls
pwd
cd ..
vi Makefile
make 
pwd
cd ..
cd ..
ls
tar tvf ~/Downloads/monocypher-3.0.0.tar.gz
tar xvf ~/Downloads/monocypher-3.0.0.tar.gz
cd monocypher-3.0.0
ls
cd ..
ls
cd fw-nrf
ls
make
pwd
ls
ls src
make
ls lib
ls lib/crypto
ls lib/crypto/src
brew install yaml
brew install yml
brew install yaml-cpp
pwd
make
pwd
make
pwd
cd ..
cd fw-nrf.master
ls
cd fw-nrf
make
pwd
cd ..
cd ..
pwd
cd fw-nrf
ls
make load TARGET=proxy-nano-soc-v2-debug
make clean all
pwd
cd ..
cd fw-nrf
ls
cd ..
cd fw-nrf
ls
cd ..
pwd
cd fw-nrf
ls
make clean-all
make load TARGET=proxy-nano-soc-v2-debug\
\
\
\
\

make load TARGET=proxy-nano-soc-v2-debug\
\
\
\
\

pwd
pwd
cd targets
ls
pwd
git branch
history | grep git
pwd
pwd
ls
pwd
cd ..
ls
pwd
cd ..
mv fw-nrf junk
git clone  https://github.com/proxyco/fw-nrf/tree/lance/CT-865-nano-soc-v2-bsp-target
git clone git@github.com:proxyco/fw-nrf.git
git branch
pwd
ls 0-k
ls -l
cd fw-nrf
ls -l
git branch
cd ..
mv fw-nrf junk
ls
pwd
ls -al
git clone git@github.com:proxyco/fw-nrf.git
pwd
git clone git@github.com:proxyco/fw-nrf.git -b lance/CT-865-nano-soc-v2-bsp-target
rm -rf fw-nrf
git clone git@github.com:proxyco/fw-nrf.git -b lance/CT-865-nano-soc-v2-bsp-target
cd fw-nrf
git branch
make clean-all
ls -l
make load TARGET=proxy-nano-soc-v2-debug
brew install j-link
ls -al
find 
find .
grep -ri flash .
cd lib
cd src
cd combo
ls
cd src
ls -l
cd ..
ls
cd ..
ls -al
pwd
cd flash
ls -al
cd src
ls -l
pwd
vi flash.c
ls -al
pwd
cd flash_w25.c
ls -al
vi flash_w25.c
pwd
cd ..
cd ..
ls
pwd
cd ..
git branch
vi Makefile
history | grep make
pwd
ls -al
pwd
cd /Users/erabinowitz/proxy/fw-nrf/lib/flash/include/flash/Users/erabinowitz/proxy/fw-nrf/lib/flash/include/flash
cd /Users/erabinowitz/proxy/fw-nrf/lib/flash/include/flash
ls
ls -al
vi fram_fm25ck64b.h
ls -al
mv fram_fm25ck64b.h fram_fm25cl64b.h
ls -al
vi fram_fm25cl64b.h
pwd
ls
find . 
find . | grep flash
find . | grep flash | grep 25
cd lib/flash
cd include
ls -al
ls
ls -al
cd flash
ls -pal
ls -al
pwd
ls -al
cd flash.h
vi flash
ls -al
vi flash*
echo $PATH
PATH=$PATH:~/bin
echo $PATH
echo $PATH
ls -l
tar tvf scripts/astyle_3.0.1_linux.tar.gz
pwd
pwd
cd ..
pwd
ls -al
cp -rp fw-nrf fw-nrf.TEST
cd fw-nrf.TEST
cd fw-nrf.TEST
pwd
ls scripts
ls -al
tar -C scripts -xzf scripts/astyle_3.0.1_linux.tar.gz
patch -d scripts -p0 < scripts/astyle-remove-consecutive-empty-lines.patch
make -C scripts/astyle/build/gcc release install prefix=`pwd`/scripts/astyle
which install
install --help
man install
ls -l /Users/erabinowitz/proxy/fw-nrf.TEST/scripts/astyle/bin
ls -l bin/astyle
pwd
ls scripts/astyle/bin
mkdir scripts/astyle/bin
make -C scripts/astyle/build/gcc release install prefix=`pwd`/scripts/astyle
ls -l scripts/astyle
ls -l scripts/astyle/build
ls -l scripts/astyle/build/gcc
ls -l scripts/astyle/build/gcc/bin
ls -l scripts/astyle/build/*/bin
 who am i
whoami
install -d /Users/erabinowitz/proxy/fw-nrf.TEST/scripts/astyle/bin
astyle
astyle
rehash
astyle
echo $path
pwd
mkdir ~/bin
 vi ~/.cshrc
ls -la ~/
vi ~/.profile
echo $PATH
vi ~/.profile
zsh
vi ~/.profile
zsh
echo $PATH
echo $PATH
echo $PATH
astyle
pwd
ls
ls scripts/astyle/bin
ls scripts/astyle/bin
ls scripts/astyle/bin
cd scripts/astyle
ls
ls build
ls -R
cd build
ls
ls -R
cd gcc
ls
ls R
ls -R
bin/astyle
ls obj
ls _R
ls
cp bin/astyle ~/bin
astyle
pwd
ls
cd ..
cd ..
ls
ls
cd ..
pwd
cd ..
ls
pwd
vi ~/.zprofile
zsh
source ~/.zprofile
vi ~/.zprofile
source ~/.zprofile
pwd
pwd
~vi
p
pwd
owd
pwd
cd bin
cd ..
pwd
cd fw-nrf.personal_access_token
pwd
cd proxy
cd fw-nrf
ls
cd logo
ls
owd
cd proxy
cd fw-nrf
pwd
pwd
cd proxy
cd fw-nrf
pwd
pwd
pwd
cd proxy
ls
cd junk
pwd
cd ..
cd ..
cd ..
l s-al
pwd
ls
mkdir ~/BAK
pwd
ls -R
cd ..
pwd
cp -rp fw-nrf ~/BAK
pwd
echo $PATH
cat .profile
pwd
cat ~/.profile
mv ~/.profile ~/.zprofile
zsh
pwd
ls -al
pwd
ls -al
astyle
echo $PATH
pwd
ls -al
cd
ls -l
vi fram_fm25cl64b.h
vi flash*
pwd
pwd
cd proxy
ls
ls -l
cd src
ls -l
vi monocypher.c
pwd
pwd
cd ..
cd ..
cd ..
pwd
cd proxy
cd fw-nrf
ls -al
cd scripts
ls -0al
ls -l
tar -C scripts -xzf scripts/astyle_3.0.1_macos.tar.gz\

cd ..
tar -C scripts -xzf scripts/astyle_3.0.1_macos.tar.gz\

patch -d scripts -p0 < scripts/astyle-remove-consecutive-empty-lines.patch
make -C scripts/astyle/build/gcc release install prefix=`pwd`/scripts/astyle\

pwd
make -C scripts/astyle/build/gcc release install prefix=`pwd`/scripts/astyle\

ls scripts/astyle/build
ls scripts/astyle/build/mac
make -C  scripts/astyle/build/mac/Makefile release install prefix=/Users/erabinowitz/proxy/scripts/astyle
pwd
\
\

patch -d scripts -p0 < scripts/astyle-remove-consecutive-empty-lines.patch
ls
pwd
ls scripts/astyle
ls scripts/astyle/build
ls scripts/astyle/build/xcode
tar tvf scripts/astyle_3.0.1_macos.tar.gz
history | grep patch
ls scripts/astyle/
ls scripts/astyle/build
pwd
cd ..
pwd
cd 
tar tvf ~/Downloads/astyle_3.0_macos.tar.gz
man install
man zsh
man zsh
defaults write com.google.Chrome ExternalProtocolDialogShowAlwaysOpenCheckbox -bool true
pwd
ls -l
pwd
ls -l /dev/tty*
pwd
vi ~/.zprofile
cp ~/.zprofile ~/.zshrc
vi ~/.zprofile
cp ~/.zprofile ~/.zshrc
ls
ls
vi ~/.zshrc
pwd
cd /Users/erabinowitz/proxy/fw-nrf/lib/flash/include/flash
zsh
ls -lt
pwd
vi ~/.zprofile
pwd
zsh
: 1585874587:0;vi ~/.zshrc
: 1585874615:0;l
: 1585874617:0;ls
: 1585874618:0;ls -l
: 1585874623:0;cd 
: 1585874624:0;ls -al
: 1585874638:0;vi .zshrc.pre-oh-my-zsh .zshrc
: 1585874712:0;source .zshrc
vi ~/.zprofile
vi .zshrc
zsh
j
zsh
